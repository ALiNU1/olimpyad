'''
Совсем недавно Вася занялся программированием и решил реализовать собственную программу для игры в шахматы. 
Но у него возникла проблема определения правильности хода конем, который делает пользователь. 
Т.е. если пользователь вводит значение «C7-D5», то программа должна определить это как правильный ход, 
если же введено «E2-E4», то ход неверный. Также нужно проверить корректность записи ввода: если например, 
введено «D9-N5», 
то программа должна определить данную запись как ошибочную. Помогите ему осуществить эту проверку!
'''

# s = input()
# if len(s)==5 and s[2]=='-' and 65<=ord(s[0])<=72 and 1<=int(s[1])<=8 and 65<=ord(s[3])<=72 and 1<=int(s[4])<=8:
#     x = ord(s[0])
#     y=int(s[1])
#     s0 = s[3:]
#     a = []
#     for i in [-2,-1,1,2]:
#         for j in [-2,-1,1,2]:
#             if abs(i) !=abs(j):
#                 ss = chr(x+i)+str(y+j)
#                 a.append(ss)
#     if s0 in a:
#         print('YES')
#     else:
#         print('NO')
# else:
#     print('ERROR')

'''
Петя успевает по математике лучше всех в классе, поэтому учитель задал ему сложное домашнее задание, 
в котором нужно в заданном наборе целых чисел найти сумму всех положительных элементов, затем найти 
где в заданной последовательности находятся максимальный и минимальный элемент и вычислить произведение чисел, 
расположенных в этой последовательности между ними. Так же известно, что минимальный и максимальный элемент 
встречаются в заданном множестве чисел только один раз и не являются соседними. Поскольку задач такого рода 
учитель дал Пете около ста, то Петя как сильный программист 
смог написать программу, которая по заданному набору чисел самостоятельно находит решение. А Вам слабо?
'''

# from math import prod as mul
# input()
# a = list(map(int,input().split()))
# sum = 0
# for i in a:
#     if i >0:
#         sum+=i
# x = a.index(max(a))
# y = a.index(min(a))
# m = min(x,y)
# n = max(x,y)
# b = mul(a[m+1:n])
# print(sum,b)

'''
Вася в школе изучил квадратные уравнения и понял, как они легко решаются путем вычисления дискриминанта. 
Но Петя поведал ему о методе решения кубических уравнений вида A*X3 + B*X2 + C*X + D = 0. На факультативе 
по математике Васе задали решить около ста уравнений как раз такого вида. Но, к сожалению, Вася забыл формулы, 
о которых рассказывал ему Петя. Но Васе было известно, что все корни уравнений – целые числа и находятся на отрезке 
[-100, 100]. Поэтому у Васи есть шанс найти их методом перебора, но для этого ему придется затратить уйму времени, 
т.к. возможно необходимо будет осуществить перебор нескольких тысяч значений. 
Помогите Васе написать программу, которая поможет ему найти корни кубических уравнений!
'''

# a = list(map(int,input().split()))
# b = []
# for x in range(-100,101):
#     if a[0]*x**3+a[1]*x**2+a[2]*x+a[3]==0:
#         b.append(x)
# print(*b)

'''
В нашем зоопарке появился заяц. Его поместили в клетку, и чтобы ему не было скучно, директор зоопарка 
распорядился поставить в его клетке лесенку. Теперь наш зайчик может прыгать по лесенке вверх, перепрыгивая 
через ступеньки. Лестница имеет определенное количество ступенек N. Заяц может одним прыжком преодолеть не более 
К ступенек. Для разнообразия зайчик пытается каждый раз найти новый путь к вершине лестницы. Директору любопытно, 
сколько различных способов есть у зайца добраться до вершины лестницы при заданных значениях K и N. 
Помогите директору написать программу, которая поможет вычислить это количество. Например, если K=3 и N=4, то 
существуют следующие маршруты: 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2, 1+3, 3+1. 
Т.е. при данных значениях у зайца всего 7 различных маршрутов добраться до вершины лестницы.
'''

# k,n = map(int,input().split())
# d = [1]+[0]*n*k
# for i in range(n):
#     for j in range(1,k+1):
#         d[i+j]+=d[i]
# print(max(d))